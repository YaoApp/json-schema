
{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/YaoQuery.QueryDSL",
  "definitions": {
    "YaoQuery.QueryDSL": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "Remarks [Management Field]"
        },
        "select": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of fields to select"
        },
        "from": {
          "type": "string",
          "description": "Name of the table or data model to query"
        },
        "wheres": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/YaoQuery.Where"
              }
            },
            {
              "$ref": "#/definitions/YaoQuery.Recordable"
            }
          ],
          "description": "Data query conditions"
        },
        "orders": {
          "$ref": "#/definitions/YaoQuery.Orders",
          "description": "Sorting conditions"
        },
        "offset": {
          "type": "number",
          "description": "Starting position of the record"
        },
        "first": {
          "type": "boolean",
          "description": "Read only the first record"
        },
        "limit": {
          "type": "number",
          "description": "Number of records to read"
        },
        "page": {
          "type": "number",
          "description": "Current page number for paginated query"
        },
        "pagesize": {
          "type": "number",
          "description": "Number of records per page"
        },
        "data-only": {
          "type": "boolean",
          "description": "Set to true for results as []Record; Set to false for results as Paginate, effective only when `page` or `pagesize` is specified."
        },
        "groups": {
          "$ref": "#/definitions/YaoQuery.Groups",
          "description": "Aggregate fields and statistical hierarchy settings"
        },
        "havings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YaoQuery.Having"
          },
          "description": "Filter aggregated query results, effective only when `groups` is specified"
        },
        "unions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YaoQuery.QueryDSL"
          },
          "description": "Union queries. Multiple queries merge results into a single table"
        },
        "query": {
          "$ref": "#/definitions/YaoQuery.QueryDSL",
          "description": "Subquery. Generates a two-dimensional data table or numerical value according to QueryDSL description logic."
        },
        "name": {
          "type": "string",
          "description": "Alias of the subquery"
        },
        "joins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YaoQuery.Join"
          },
          "description": "Table joins. **Not recommended for tables with large data volumes.**"
        },
        "sql": {
          "$ref": "#/definitions/YaoQuery.SQL",
          "description": "SQL statement. **Avoid using unless necessary**"
        },
        "debug": {
          "type": "boolean",
          "description": "Enable debugging (included in query log upon activation)"
        }
      },
      "additionalProperties": false,
      "description": "QueryDSL Gou Query Domain Specific Language"
    },
    "YaoQuery.Where": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "description": "Query field"
        },
        "value": {
          "type": "string",
          "description": "Matching value"
        },
        "op": {
          "type": "string",
          "description": "Matching relational operator"
        },
        "or": {
          "type": "string",
          "description": "Set to true for logical OR in query condition, defaults to logical AND"
        },
        "query": {
          "type": "string",
          "description": "Subquery, if query is set, the value is ignored."
        },
        "comment": {
          "type": "string",
          "description": "Query condition comment"
        },
        "wheres": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YaoQuery.Where"
          },
          "description": "Grouped query. Used for scenarios like condition 1 and (condition 2 OR condition 3)"
        }
      },
      "additionalProperties": {
        "description": "Simplified operation can be used, e.g.: { \":score\": \"score\", \"in\": [10, 20] }"
      },
      "description": "Where query conditions"
    },
    "YaoQuery.Recordable": {
      "type": "object"
    },
    "YaoQuery.Orders": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/YaoQuery.Order"
      },
      "description": "Collection of sorting conditions"
    },
    "YaoQuery.Order": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "description": "Sorting field"
        },
        "sort": {
          "type": "string",
          "description": "Sorting method"
        },
        "comment": {
          "type": "string",
          "description": "Sorting condition comment"
        }
      },
      "required": [
        "field"
      ],
      "additionalProperties": false,
      "description": "Order sorting conditions"
    },
    "YaoQuery.Groups": {
      "anyOf": [
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YaoQuery.Group"
          }
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ],
      "description": "Collection of aggregate conditions"
    },
    "YaoQuery.Group": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/YaoQuery.Expression",
          "description": "Sorting field"
        },
        "rollup": {
          "type": "string",
          "description": "Returns multi-level statistical results for the corresponding aggregate field name."
        },
        "comment": {
          "type": "string",
          "description": "Query condition comment"
        }
      },
      "additionalProperties": false,
      "description": "Group aggregate conditions"
    },
    "YaoQuery.Expression": {
      "type": "string"
    },
    "YaoQuery.Having": {
      "type": "object",
      "properties": {
        "havings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YaoQuery.Having"
          },
          "description": "Grouped query. Used for scenarios like condition 1 and (condition 2 OR condition 3)"
        }
      },
      "additionalProperties": false,
      "description": "Having filter conditions for aggregate results"
    },
    "YaoQuery.Join": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/YaoQuery.Table",
          "description": "Name of the table or data model to query"
        },
        "key": {
          "$ref": "#/definitions/YaoQuery.Expression",
          "description": "Field name of the joining table"
        },
        "foreign": {
          "$ref": "#/definitions/YaoQuery.Expression",
          "description": "Target table field name (table name or alias must be specified)"
        },
        "left": {
          "type": "boolean",
          "description": "Set to true for LEFT JOIN, defaults to JOIN"
        },
        "right": {
          "type": "boolean",
          "description": "Set to true for RIGHT JOIN, defaults to JOIN"
        },
        "comment": {
          "type": "string",
          "description": "Association condition comment"
        }
      },
      "additionalProperties": false,
      "description": "Join table connections"
    },
    "YaoQuery.Table": {
      "type": "string"
    },
    "YaoQuery.SQL": {
      "type": "object",
      "properties": {
        "stmt": {
          "type": "string",
          "description": "SQL statement, do not mix with other SQL query conditions"
        },
        "args": {
          "type": "array",
          "items": {},
          "description": "Bound parameter table"
        },
        "comment": {
          "type": "string",
          "description": "SQL statement comment"
        }
      },
      "additionalProperties": false,
      "description": "SQL statement"
    }
  }
}
