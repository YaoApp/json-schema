
{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/YaoList.ListDSL",
  "definitions": {
    "YaoList.ListDSL": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version [Management Field]"
        },
        "decription": {
          "type": "string",
          "description": "Description [Management Field]"
        },
        "comment": {
          "type": "string",
          "description": "Comment [Management Field]"
        },
        "id": {
          "type": "string",
          "description": "Unique Identifier"
        },
        "name": {
          "type": "string"
        },
        "action": {
          "$ref": "#/definitions/YaoList.ActionDSL",
          "description": "Processor Action"
        },
        "layout": {
          "$ref": "#/definitions/YaoList.LayoutDSL",
          "description": "Layout"
        },
        "fields": {
          "$ref": "#/definitions/YaoList.FieldsDSL",
          "description": "Field Definitions"
        },
        "config": {
          "$ref": "#/definitions/CommonConfig",
          "description": "Configuration"
        },
        "hooks": {
          "$ref": "#/definitions/HookType",
          "description": "Hook Events, Automatically Generated by Framework"
        },
        "$schema": {
          "type": "string"
        }
      },
      "required": ["name", "action"],
      "additionalProperties": false
    },
    "YaoList.ActionDSL": {
      "type": "object",
      "properties": {
        "bind": {
          "$ref": "#/definitions/YaoList.BindActionDSL"
        },
        "setting": {
          "$ref": "#/definitions/YaoAction.Process"
        },
        "component": {
          "$ref": "#/definitions/YaoAction.Process"
        },
        "upload": {
          "$ref": "#/definitions/YaoAction.Process"
        },
        "download": {
          "$ref": "#/definitions/YaoAction.Process"
        },
        "get": {
          "$ref": "#/definitions/YaoAction.Process"
        },
        "save": {
          "$ref": "#/definitions/YaoAction.Process"
        },
        "before:find": {
          "$ref": "#/definitions/YaoHook.Before"
        },
        "after:find": {
          "$ref": "#/definitions/YaoHook.After"
        },
        "before:save": {
          "$ref": "#/definitions/YaoHook.Before"
        },
        "after:save": {
          "$ref": "#/definitions/YaoHook.After"
        }
      },
      "additionalProperties": false
    },
    "YaoList.BindActionDSL": {
      "type": "object",
      "properties": {
        "model": {
          "type": "string"
        },
        "store": {
          "type": "string"
        },
        "table": {
          "type": "string"
        },
        "option": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    "YaoAction.Process": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "Comment [Management Field]"
        },
        "process": {
          "type": "string",
          "description": "Associated Processor Name"
        },
        "bind": {
          "type": "string",
          "description": "Framework Default Associated Processor Name, used if process is not specified"
        },
        "guard": {
          "type": "string",
          "description": "Authorization Method, multiple can be used, separated by commas"
        },
        "default": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionDefault"
          },
          "description": "Associated Processor Default Value, null indicates no default value"
        },
        "disable": {
          "type": "boolean",
          "description": "Unused"
        }
      },
      "additionalProperties": false,
      "description": "Custom Associated Processor"
    },
    "ActionDefault": {
      "anyOf": [
        {
          "$ref": "#/definitions/YaoQueryParam.QueryParam"
        },
        {}
      ]
    },
    "YaoQueryParam.QueryParam": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "Comment [Management Field]"
        },
        "model": {
          "type": "string",
          "description": "Model Name"
        },
        "table": {
          "type": "string",
          "description": "Table Name"
        },
        "alias": {
          "type": "string",
          "description": "Alias"
        },
        "export": {
          "type": "string",
          "description": "Prefix when exporting data"
        },
        "select": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Selected Fields"
        },
        "wheres": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YaoQueryParam.QueryWhere"
          },
          "description": "Query Conditions"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YaoQueryParam.QueryOrder"
          },
          "description": "Sort Conditions"
        },
        "limit": {
          "type": "number",
          "description": "Limit Record Count Returned"
        },
        "offset": {
          "type": "number",
          "description": "Offset"
        },
        "page": {
          "type": "number",
          "description": "Current Page Number"
        },
        "pagesize": {
          "type": "number",
          "description": "Number of Records Displayed Per Page"
        },
        "withs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/YaoQueryParam.QueryWith"
          },
          "description": "Read Related Model"
        }
      },
      "additionalProperties": false,
      "description": "Query Parameters for Data Query"
    },
    "YaoQueryParam.QueryWhere": {
      "type": "object",
      "properties": {
        "rel": {
          "type": "string",
          "description": "If querying by the field of a related model, fill in the related model name"
        },
        "column": {
          "type": "string",
          "description": "Field Name"
        },
        "value": {
          "description": "Matching Value"
        },
        "method": {
          "type": "string",
          "description": "Query Method `where`, `orwhere`, `wherein`, `orwherein`... Default is `where`\n\n| Query Method | Description                            |\n|--------------|----------------------------------------|\n| where        | WHERE field = value, WHERE field >= value |\n| orwhere      | ... OR WHERE field = value                |"
        },
        "op": {
          "type": "string",
          "enum": [
            "eq",
            "like",
            "match",
            "gt",
            "ge",
            "lt",
            "le",
            "null",
            "notnull",
            "in",
            "ne"
          ],
          "description": "Match Relation `eq`, `like`, `in`, `gt` etc. Default is `eq`\n\n| Match Relation | Description                         |\n|----------------|-------------------------------------|\n| eq             | Default Equality WHERE field = value |\n| like           | Match WHERE field like value         |\n| match          | Match WHERE field full-text search value |\n| gt             | Greater than WHERE field > value     |\n| ge             | Greater than or equal WHERE field >= value |\n| lt             | Less than WHERE field < value        |\n| le             | Less than or equal WHERE field <= value |\n|           | Is null WHERE field IS NULL          |\n| notnull | Not null WHERE field IS NOT NULL     |\n| in             | List includes WHERE field IN (values...)\n| ne             | Not equal to match value             |"
        },
        "wheres": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YaoQueryParam.QueryWhere"
          },
          "description": "Grouped Query"
        }
      },
      "additionalProperties": false,
      "description": "QueryWhere Condition"
    },
    "YaoQueryParam.QueryOrder": {
      "type": "object",
      "properties": {
        "rel": {
          "type": "string",
          "description": "If sorting by the field of a related model, fill in the related model name"
        },
        "column": {
          "type": "string",
          "description": "Field Name"
        },
        "option": {
          "type": "string",
          "enum": [
            "desc",
            "asc"
          ],
          "description": "Sorting Order, `desc`, `asc`, default is `asc`"
        }
      },
      "required": ["column"],
      "additionalProperties": false,
      "description": "QueryOrder Sort"
    },
    "YaoQueryParam.QueryWith": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/YaoQueryParam.QueryParam"
        }
      },
      "additionalProperties": false,
      "description": "With Relations Query"
    },
    "YaoHook.Before": {
      "type": "string"
    },
    "YaoHook.After": {
      "type": "string"
    },
    "YaoList.LayoutDSL": {
      "type": "object",
      "properties": {
        "list": {
          "$ref": "#/definitions/YaoList.ViewLayoutDSL"
        },
        "config": {
          "$ref": "#/definitions/CommonConfig"
        }
      },
      "additionalProperties": false
    },
    "YaoList.ViewLayoutDSL": {
      "type": "object",
      "properties": {
        "props": {
          "$ref": "#/definitions/YaoComponent.PropsDSL"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YaoComponent.LayoutColumnDSL"
          }
        }
      },
      "additionalProperties": false
    },
    "YaoComponent.PropsDSL": {
      "type": "object"
    },
    "YaoComponent.LayoutColumnDSL": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Field Label"
        },
        "width": {
          "description": "Width"
        },
        "height": {
          "description": "Height"
        },
        "fixed": {
          "type": "boolean",
          "description": "Fixed"
        }
      },
      "additionalProperties": false
    },
    "CommonConfig": {
      "type": "object",
      "properties": {
        "full": {
          "type": "boolean",
          "description": "Full Screen Display for Table"
        }
      },
      "additionalProperties": false
    },
    "YaoList.FieldsDSL": {
      "type": "object",
      "properties": {
        "list": {
          "$ref": "#/definitions/YaoField.Columns"
        }
      },
      "additionalProperties": false
    },
    "YaoField.Columns": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/YaoField.ColumnDSL"
      }
    },
    "YaoField.ColumnDSL": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "Comment [Management Field]"
        },
        "id": {
          "type": "string",
          "description": "Unique Identifier"
        },
        "$data": {
          "$ref": "#/definitions/YaoComponent.CloudPropsDSL",
          "description": "Remote Data Interface"
        },
        "key": {
          "type": "string",
          "description": "Column Primary Key Name, No Need to Explicitly Set"
        },
        "bind": {
          "type": "string",
          "description": "Default API Interface Returned Field Name"
        },
        "link": {
          "type": "string",
          "description": "Chart Link Address, Used Only for Charts"
        },
        "view": {
          "$ref": "#/definitions/YaoComponent.ViewComponentDSL",
          "description": "Display Component Settings"
        },
        "edit": {
          "$ref": "#/definitions/YaoComponent.EditComponentDSL",
          "description": "Edit Component Settings"
        }
      },
      "additionalProperties": false
    },
    "YaoComponent.CloudPropsDSL": {
      "type": "object",
      "properties": {
        "xpath": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Type"
        },
        "name": {
          "type": "string",
          "description": "Name"
        },
        "process": {
          "type": "string",
          "description": "Processor"
        },
        "query": {
          "type": "object",
          "description": "Processor Parameters"
        }
      },
      "additionalProperties": false
    },
    "YaoComponent.ViewComponentDSL": {
      "type": "object",
      "properties": {
        "bind": {
          "type": "string",
          "description": "Bound Field Name, Use Default if Not Specified"
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/definitions/YaoComponent.ViewComponentEnum"
            },
            {
              "type": "string",
              "const": "public/xxx"
            }
          ],
          "description": "Component Name, Refer to https://yaoapps.com/components for Available Components, public/ indicates remote components"
        },
        "compute": {
          "anyOf": [
            {
              "$ref": "#/definitions/YaoComponent.Compute"
            },
            {
              "type": "string"
            }
          ],
          "description": "Data Calculation"
        },
        "props": {
          "type": "object",
          "properties": {
            "xProps": {
              "type": "object",
              "properties": {
                "$remote": {
                  "type": "object",
                  "properties": {
                    "process": {
                      "type": "string",
                      "description": "Processor"
                    },
                    "query": {
                      "type": "object",
                      "description": "Request Parameter Binding, Use {{}} to Bind Record Structure"
                    }
                  },
                  "required": ["process"],
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "description": "Component Properties, Refer to antd Components"
        }
      },
      "additionalProperties": false
    },
    "YaoComponent.ViewComponentEnum": {
      "anyOf": [
        {
          "type": "string",
          "const": "A"
        },
        {
          "type": "string",
          "const": "Checkbox"
        },
        {
          "type": "string",
          "const": "Color"
        },
        {
          "type": "string",
          "const": "Image"
        },
        {
          "type": "string",
          "const": "Switch"
        },
        {
          "type": "string",
          "const": "Tag"
        },
        {
          "type": "string",
          "const": "Text"
        },
        {
          "type": "string",
          "const": "Tooltip"
        },
        {
          "$ref": "#/definitions/YaoComponent.CustomComponent"
        }
      ]
    },
    "YaoComponent.CustomComponent": {
      "type": "string"
    },
    "YaoComponent.Compute": {
      "type": "object",
      "properties": {
        "process": {
          "type": "string",
          "description": "If the type of compute is a string, it will automatically convert to a processor name and pass 4 parameters to the processor, with the first argument being the value of the field."
        },
        "args": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/YaoComponent.CArg"
              }
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "description": "Use expressions to reference data structure, default parameter list: [\"$C(value)\", \"$C(props)\", \"$C(type)\", \"$C(id)\"]"
        }
      },
      "required": ["process"],
      "additionalProperties": false,
      "description": "Data Calculation Parameter List:   $C(row) Current Row Data,   $C(value) Current Field Value in Current Row,   $C(props) Current Component Props,   $C(type) Current Component Type,   $C(id) Current Widget ID,   'hello' String Constant,   1024 Integer Constant,   0.618 Float Constant"
    },
    "YaoComponent.CArg": {
      "type": "object",
      "properties": {
        "isExp": {
          "type": "boolean",
          "description": "Is Expression, if true, use key to bind reference to structure"
        },
        "key": {
          "type": "string",
          "description": "Effective when isExp=true, use key to refer to field name in model structure"
        },
        "value": {
          "description": "Effective when isExp=false, can be any object. If it is a string, use :: as a prefix for formatted output"
        }
      },
      "required": ["isExp", "key", "value"],
      "additionalProperties": false,
      "description": "Custom Compute Processor Parameter List"
    },
    "YaoComponent.EditComponentDSL": {
      "type": "object",
      "properties": {
        "bind": {
          "type": "string",
          "description": "Bound Field Name, Use Default if Not Specified"
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/definitions/YaoComponent.EditComponentEnum"
            },
            {
              "type": "string",
              "const": "public/xxx"
            }
          ],
          "description": "Component Name, Refer to https://yaoapps.com/components for Available Components, public/ indicates remote components"
        },
        "compute": {
          "anyOf": [
            {
              "$ref": "#/definitions/YaoComponent.Compute"
            },
            {
              "type": "string"
            }
          ],
          "description": "Data Calculation"
        },
        "props": {
          "type": "object",
          "properties": {
            "xProps": {
              "type": "object",
              "properties": {
                "$search": {
                  "type": "object",
                  "properties": {
                    "process": {
                      "type": "string",
                      "description": "Processor"
                    },
                    "query": {
                      "type": "object",
                      "description": "Request Parameter Binding, Use {{}} to Bind Record Structure"
                    }
                  },
                  "required": ["process"],
                  "additionalProperties": false,
                  "description": "Component Search Callback API"
                },
                "$remote": {
                  "type": "object",
                  "properties": {
                    "process": {
                      "type": "string",
                      "description": "Processor"
                    },
                    "query": {
                      "type": "object",
                      "description": "Request Parameter Binding, Use {{}} to Bind Record Structure"
                    }
                  },
                  "required": ["process"],
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "$on:change": {
              "type": "object",
              "properties": {
                "process": {
                  "type": "string",
                  "description": "Processor"
                },
                "query": {
                  "type": "object",
                  "description": "Request Parameter Binding, Use {{}} to Bind Record Structure"
                }
              },
              "required": ["process"],
              "additionalProperties": false,
              "description": "OnChange Event"
            },
            "itemProps": {
              "type": "object",
              "properties": {
                "rules": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RuleObject"
                  },
                  "description": "Component Rules"
                },
                "tooltip": {
                  "type": "string",
                  "description": "Tooltip"
                },
                "initialValue": {
                  "description": "Default Value"
                }
              },
              "description": "Form Item Configuration"
            }
          },
          "description": "Component Properties, Refer to antd Components"
        }
      },
      "additionalProperties": false
    },
    "YaoComponent.EditComponentEnum": {
      "anyOf": [
        {
          "type": "string",
          "const": "Cascader"
        },
        {
          "type": "string",
          "const": "CheckboxGroup"
        },
        {
          "type": "string",
          "const": "CodeEditor"
        },
        {
          "type": "string",
          "const": "ColorPicker"
        },
        {
          "type": "string",
          "const": "DatePicker"
        },
        {
          "type": "string",
          "const": "Grant"
        },
        {
          "type": "string",
          "const": "Input"
        },
        {
          "type": "string",
          "const": "InputNumber"
        },
        {
          "type": "string",
          "const": "List"
        },
        {
          "type": "string",
          "const": "Mentions"
        },
        {
          "type": "string",
          "const": "Password"
        },
        {
          "type": "string",
          "const": "RadioGroup"
        },
        {
          "type": "string",
          "const": "RangePicker"
        },
        {
          "type": "string",
          "const": "RichText"
        },
        {
          "type": "string",
          "const": "Select"
        },
        {
          "type": "string",
          "const": "Table"
        },
        {
          "type": "string",
          "const": "TextArea"
        },
        {
          "type": "string",
          "const": "TimePicker"
        },
        {
          "type": "string",
          "const": "Tree"
        },
        {
          "type": "string",
          "const": "Upload"
        },
        {
          "$ref": "#/definitions/YaoComponent.CustomComponent"
        }
      ]
    },
    "RuleObject": {
      "anyOf": [
        {
          "$ref": "#/definitions/AggregationRule"
        },
        {
          "$ref": "#/definitions/ArrayRule"
        }
      ]
    },
    "AggregationRule": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "warningOnly": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "enum": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StoreValue"
          }
        },
        "len": {
          "type": "number"
        },
        "max": {
          "type": "number"
        },
        "min": {
          "type": "number"
        },
        "pattern": {
          "type": "string",
          "format": "regex"
        },
        "required": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/RuleType"
        },
        "whitespace": {
          "type": "boolean"
        },
        "validateTrigger": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "description": "Customize rule level `validateTrigger`. Must be subset of Field `validateTrigger`"
        }
      }
    },
    "StoreValue": {},
    "RuleType": {
      "type": "string",
      "enum": [
        "string",
        "number",
        "boolean",
        "method",
        "regexp",
        "integer",
        "float",
        "object",
        "enum",
        "date",
        "url",
        "hex",
        "email"
      ]
    },
    "ArrayRule": {
      "type": "object",
      "properties": {
        "warningOnly": {
          "type": "boolean"
        },
        "enum": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StoreValue"
          }
        },
        "len": {
          "type": "number"
        },
        "max": {
          "type": "number"
        },
        "message": {
          "type": "string"
        },
        "min": {
          "type": "number"
        },
        "pattern": {
          "type": "string",
          "format": "regex"
        },
        "required": {
          "type": "boolean"
        },
        "whitespace": {
          "type": "boolean"
        },
        "validateTrigger": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "description": "Customize rule level `validateTrigger`. Must be subset of Field `validateTrigger`"
        },
        "type": {
          "type": "string",
          "const": "array"
        },
        "defaultField": {
          "$ref": "#/definitions/RuleObject"
        }
      },
      "required": ["type"],
      "additionalProperties": false
    },
    "HookType": {
      "type": "object",
      "properties": {
        "onChange": {
          "type": "object",
          "description": "Collect Edit Component's $on:change Event"
        }
      },
      "required": ["onChange"],
      "description": "Hook Events, Collect Edit Component's $on:change Event"
    }
  }
}
